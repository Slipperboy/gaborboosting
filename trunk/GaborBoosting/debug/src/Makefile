# Makefile.in generated by automake 1.10.1 from Makefile.am.
# src/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994, 1995, 1996, 1997, 1998, 1999, 2000, 2001, 2002,
# 2003, 2004, 2005, 2006, 2007, 2008  Free Software Foundation, Inc.
# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.





VPATH = /home/sir02mz/CWorks/Gaborboosting/src
pkgdatadir = $(datadir)/adaboostgabortraining
pkglibdir = $(libdir)/adaboostgabortraining
pkgincludedir = $(includedir)/adaboostgabortraining
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = i686-pc-linux-gnu
host_triplet = i686-pc-linux-gnu
bin_PROGRAMS = adaboostgabortraining$(EXEEXT) MutInf$(EXEEXT) \
	GaborProcess$(EXEEXT) adaboostgabortesting$(EXEEXT) \
	prepare$(EXEEXT) sign2weaks$(EXEEXT) \
	PairPoolPartition$(EXEEXT) adaboostgabortraining.M1$(EXEEXT) \
	GaborTesting$(EXEEXT) FindMutInf$(EXEEXT) trainFERET$(EXEEXT) \
	testFERET$(EXEEXT)
subdir = src
DIST_COMMON = $(noinst_HEADERS) $(srcdir)/Makefile.am \
	$(srcdir)/Makefile.in
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/configure.in
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
mkinstalldirs = $(install_sh) -d
CONFIG_HEADER = $(top_builddir)/config.h
CONFIG_CLEAN_FILES =
am__vpath_adj_setup = srcdirstrip=`echo "$(srcdir)" | sed 's|.|.|g'`;
am__vpath_adj = case $$p in \
    $(srcdir)/*) f=`echo "$$p" | sed "s|^$$srcdirstrip/||"`;; \
    *) f=$$p;; \
  esac;
am__strip_dir = `echo $$p | sed -e 's|^.*/||'`;
am__installdirs = "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"
libLIBRARIES_INSTALL = $(INSTALL_DATA)
LIBRARIES = $(lib_LIBRARIES)
ARFLAGS = cru
libAdaGabor_a_AR = $(AR) $(ARFLAGS)
libAdaGabor_a_LIBADD =
am_libAdaGabor_a_OBJECTS = MatUsage.$(OBJEXT) cv2bins.$(OBJEXT) \
	cvadaboost.$(OBJEXT) cvadaboostfeatureselection.$(OBJEXT) \
	cvbin.$(OBJEXT) cventropy.$(OBJEXT) \
	cvbinarytrainingdata.$(OBJEXT) \
	cvbindiffgabadafeatureselect.$(OBJEXT) \
	cvbingabadafeatureselect.$(OBJEXT) cvfaceclassifier.$(OBJEXT) \
	cvfacedb.$(OBJEXT) cvfacesvmclassifier.$(OBJEXT) \
	cvferet.$(OBJEXT) cvgabadafeatureselect.$(OBJEXT) \
	cvgabor.$(OBJEXT) cvgabordifferencedatamaker.$(OBJEXT) \
	cvgaborfeature.$(OBJEXT) cvgaborfeaturepair.$(OBJEXT) \
	cvgaborfeaturepairpool.$(OBJEXT) \
	cvgaborfeaturepairselect.$(OBJEXT) \
	cvgaborfeaturepool.$(OBJEXT) cvlookuptable.$(OBJEXT) \
	cvgaborresponsedata.$(OBJEXT) cvknnweaklearner.$(OBJEXT) \
	cvmultigabadafeatureselect.$(OBJEXT) \
	cvmultigabadafsm1.$(OBJEXT) cvmultitrainingdata.$(OBJEXT) \
	cvmutinf.$(OBJEXT) cvmweaklearner.$(OBJEXT) \
	cvpcafacereg.$(OBJEXT) cvpoolparams.$(OBJEXT) \
	cvsubject.$(OBJEXT) cvtestingdata.$(OBJEXT) \
	cvtrainingdata.$(OBJEXT) cvweaklearner.$(OBJEXT) \
	cvxm2vts.$(OBJEXT) makingfeaturedata.$(OBJEXT)
libAdaGabor_a_OBJECTS = $(am_libAdaGabor_a_OBJECTS)
binPROGRAMS_INSTALL = $(INSTALL_PROGRAM)
PROGRAMS = $(bin_PROGRAMS)
am_FindMutInf_OBJECTS = findMutInf.$(OBJEXT)
FindMutInf_OBJECTS = $(am_FindMutInf_OBJECTS)
FindMutInf_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_GaborProcess_OBJECTS = DataGen.$(OBJEXT)
GaborProcess_OBJECTS = $(am_GaborProcess_OBJECTS)
GaborProcess_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_GaborTesting_OBJECTS = GaborTest.$(OBJEXT)
GaborTesting_OBJECTS = $(am_GaborTesting_OBJECTS)
GaborTesting_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_MutInf_OBJECTS = MutInformation.$(OBJEXT)
MutInf_OBJECTS = $(am_MutInf_OBJECTS)
MutInf_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_PairPoolPartition_OBJECTS = PoolPartition.$(OBJEXT)
PairPoolPartition_OBJECTS = $(am_PairPoolPartition_OBJECTS)
PairPoolPartition_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_adaboostgabortesting_OBJECTS = adaboostgabortesting.$(OBJEXT)
adaboostgabortesting_OBJECTS = $(am_adaboostgabortesting_OBJECTS)
adaboostgabortesting_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_adaboostgabortraining_OBJECTS = adaboostgabortraining.$(OBJEXT)
adaboostgabortraining_OBJECTS = $(am_adaboostgabortraining_OBJECTS)
adaboostgabortraining_DEPENDENCIES =  \
	$(top_builddir)/src/libAdaGabor.a
adaboostgabortraining_LINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(adaboostgabortraining_LDFLAGS) $(LDFLAGS) -o $@
am_adaboostgabortraining_M1_OBJECTS = adaboostgabor.M1.$(OBJEXT)
adaboostgabortraining_M1_OBJECTS =  \
	$(am_adaboostgabortraining_M1_OBJECTS)
adaboostgabortraining_M1_DEPENDENCIES =  \
	$(top_builddir)/src/libAdaGabor.a
am_prepare_OBJECTS = prepare.$(OBJEXT)
prepare_OBJECTS = $(am_prepare_OBJECTS)
prepare_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_sign2weaks_OBJECTS = sign2weaks.$(OBJEXT)
sign2weaks_OBJECTS = $(am_sign2weaks_OBJECTS)
sign2weaks_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_testFERET_OBJECTS = ferettesting.$(OBJEXT)
testFERET_OBJECTS = $(am_testFERET_OBJECTS)
testFERET_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
am_trainFERET_OBJECTS = ferettraining.$(OBJEXT)
trainFERET_OBJECTS = $(am_trainFERET_OBJECTS)
trainFERET_DEPENDENCIES = $(top_builddir)/src/libAdaGabor.a
DEFAULT_INCLUDES = -I. -I$(srcdir) -I$(top_builddir)
depcomp = $(SHELL) $(top_srcdir)/depcomp
am__depfiles_maybe = depfiles
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) \
	--mode=link $(CXXLD) $(AM_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
SOURCES = $(libAdaGabor_a_SOURCES) $(FindMutInf_SOURCES) \
	$(GaborProcess_SOURCES) $(GaborTesting_SOURCES) \
	$(MutInf_SOURCES) $(PairPoolPartition_SOURCES) \
	$(adaboostgabortesting_SOURCES) \
	$(adaboostgabortraining_SOURCES) \
	$(adaboostgabortraining_M1_SOURCES) $(prepare_SOURCES) \
	$(sign2weaks_SOURCES) $(testFERET_SOURCES) \
	$(trainFERET_SOURCES)
DIST_SOURCES = $(libAdaGabor_a_SOURCES) $(FindMutInf_SOURCES) \
	$(GaborProcess_SOURCES) $(GaborTesting_SOURCES) \
	$(MutInf_SOURCES) $(PairPoolPartition_SOURCES) \
	$(adaboostgabortesting_SOURCES) \
	$(adaboostgabortraining_SOURCES) \
	$(adaboostgabortraining_M1_SOURCES) $(prepare_SOURCES) \
	$(sign2weaks_SOURCES) $(testFERET_SOURCES) \
	$(trainFERET_SOURCES)
RECURSIVE_TARGETS = all-recursive check-recursive dvi-recursive \
	html-recursive info-recursive install-data-recursive \
	install-dvi-recursive install-exec-recursive \
	install-html-recursive install-info-recursive \
	install-pdf-recursive install-ps-recursive install-recursive \
	installcheck-recursive installdirs-recursive pdf-recursive \
	ps-recursive uninstall-recursive
HEADERS = $(noinst_HEADERS)
RECURSIVE_CLEAN_TARGETS = mostlyclean-recursive clean-recursive	\
  distclean-recursive maintainer-clean-recursive
ETAGS = etags
CTAGS = ctags
DIST_SUBDIRS = $(SUBDIRS)
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/sir02mz/CWorks/Gaborboosting/missing --run aclocal-1.10
AMTAR = ${SHELL} /home/sir02mz/CWorks/Gaborboosting/missing --run tar
AR = ar
AUTOCONF = ${SHELL} /home/sir02mz/CWorks/Gaborboosting/missing --run autoconf
AUTOHEADER = ${SHELL} /home/sir02mz/CWorks/Gaborboosting/missing --run autoheader
AUTOMAKE = ${SHELL} /home/sir02mz/CWorks/Gaborboosting/missing --run automake-1.10
AWK = mawk
CC = gcc
CCDEPMODE = depmode=gcc3
CFLAGS = -g -O2
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=gcc3
CXXFLAGS = -O0 -g3
CYGPATH_W = echo
DEFS = -DHAVE_CONFIG_H
DEPDIR = .deps
DSYMUTIL = 
ECHO = echo
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGREP = /bin/grep -E
EXEEXT = 
F77 = 
FFLAGS = 
GREP = /bin/grep
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
LDFLAGS = 
LIBOBJS = 
LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LN_S = ln -s
LTLIBOBJS = 
MAKEINFO = ${SHELL} /home/sir02mz/CWorks/Gaborboosting/missing --run makeinfo
MKDIR_P = /bin/mkdir -p
NMEDIT = 
OBJEXT = o
PACKAGE = adaboostgabortraining
PACKAGE_BUGREPORT = 
PACKAGE_NAME = 
PACKAGE_STRING = 
PACKAGE_TARNAME = 
PACKAGE_VERSION = 
PATH_SEPARATOR = :
RANLIB = ranlib
SED = /bin/sed
SET_MAKE = 
SHELL = /bin/bash
STRIP = strip
VERSION = 0.1
abs_builddir = /home/sir02mz/CWorks/Gaborboosting/debug/src
abs_srcdir = /home/sir02mz/CWorks/Gaborboosting/src
abs_top_builddir = /home/sir02mz/CWorks/Gaborboosting/debug
abs_top_srcdir = /home/sir02mz/CWorks/Gaborboosting
ac_ct_CC = gcc
ac_ct_CXX = g++
ac_ct_F77 = 
am__include = include
am__leading_dot = .
am__quote = 
am__tar = ${AMTAR} chof - "$$tardir"
am__untar = ${AMTAR} xf -
bindir = ${exec_prefix}/bin
build = i686-pc-linux-gnu
build_alias = 
build_cpu = i686
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = i686-pc-linux-gnu
host_alias = 
host_cpu = i686
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = $(SHELL) /home/sir02mz/CWorks/Gaborboosting/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = /bin/mkdir -p
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /usr/local
program_transform_name = s,x,x,
psdir = ${docdir}
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = /home/sir02mz/CWorks/Gaborboosting/src
sysconfdir = ${prefix}/etc
target_alias = 
top_builddir = ..
top_srcdir = /home/sir02mz/CWorks/Gaborboosting
adaboostgabortraining_SOURCES = adaboostgabortraining.cpp

# set the include path found by configure
INCLUDES = $(all_includes) -I/usr/local/include/opencv

# the library search path.
adaboostgabortraining_LDFLAGS = $(all_libraries) 
noinst_HEADERS = CommonCVFunction.h GaborBoosting.h MatUsage.h PrepareData.h \
	cv2bins.h cvadaboost.h cvadaboostfeatureselection.h cvbin.h \
	cvbinarytrainingdata.h cvbindiffgabadafeatureselect.h cvbingabadafeatureselect.h cventropy.h \
	cvfaceclassifier.h cvfacedb.h cvfacesvmclassifier.h cvferet.h cvgabadafeatureselect.h \
	cvgabor.h cvgabordifferencedatamaker.h cvgaborfeature.h cvgaborfeaturepair.h \
	cvgaborfeaturepairpool.h cvgaborfeaturepairselect.h cvgaborfeaturepool.h cvknnweaklearner.h \
	cvlookuptable.h cvmultigabadafeatureselect.h cvmultigabadafsm1.h cvmultitrainingdata.h \
	cvmutinf.h cvmweaklearner.h cvpcafacereg.h cvpoolparams.h cvsubject.h \
	cvtestingdata.h cvtrainingdata.h cvweaklearner.h cvxm2vts.h makingfeaturedata.h

adaboostgabortraining_LDADD = $(top_builddir)/src/libAdaGabor.a -lcvaux -lcv \
	-lcxcore -lhighgui -L/usr/local/lib -lml

lib_LIBRARIES = libAdaGabor.a
libAdaGabor_a_SOURCES = MatUsage.cpp cv2bins.cpp cvadaboost.cpp \
	cvadaboostfeatureselection.cpp cvbin.cpp	cventropy.cpp cvbinarytrainingdata.cpp \
	cvbindiffgabadafeatureselect.cpp cvbingabadafeatureselect.cpp cvfaceclassifier.cpp cvfacedb.cpp \
	cvfacesvmclassifier.cpp cvferet.cpp cvgabadafeatureselect.cpp cvgabor.cpp \
	cvgabordifferencedatamaker.cpp cvgaborfeature.cpp	cvgaborfeaturepair.cpp cvgaborfeaturepairpool.cpp \
	cvgaborfeaturepairselect.cpp cvgaborfeaturepool.cpp	cvlookuptable.cpp cvgaborresponsedata.cpp \
	cvknnweaklearner.cpp cvmultigabadafeatureselect.cpp cvmultigabadafsm1.cpp \
	cvmultitrainingdata.cpp cvmutinf.cpp cvmweaklearner.cpp cvpcafacereg.cpp cvpoolparams.cpp \
	cvsubject.cpp cvtestingdata.cpp	cvtrainingdata.cpp cvweaklearner.cpp cvxm2vts.cpp \
	makingfeaturedata.cpp

MutInf_SOURCES = MutInformation.cpp
MutInf_LDADD = $(top_builddir)/src/libAdaGabor.a -lhighgui -lml \
	-L/usr/local/lib -lcxcore -lcv

GaborProcess_SOURCES = DataGen.cpp
GaborProcess_LDADD = $(top_builddir)/src/libAdaGabor.a -L/usr/local/lib -lml \
	-lhighgui -lcxcore -lcv

adaboostgabortesting_SOURCES = adaboostgabortesting.cpp
adaboostgabortesting_LDADD = $(top_builddir)/src/libAdaGabor.a -lml \
	-L/usr/local/lib -lhighgui -lcxcore -lcv

prepare_SOURCES = prepare.cpp
prepare_LDADD = $(top_builddir)/src/libAdaGabor.a -L/usr/local/lib -lml \
	-lhighgui -lcv -lcxcore

sign2weaks_SOURCES = sign2weaks.cpp
sign2weaks_LDADD = $(top_builddir)/src/libAdaGabor.a -L/usr/local/lib -lml\
	-lhighgui -lcxcore -lcv

PairPoolPartition_SOURCES = PoolPartition.cpp
adaboostgabortraining_M1_SOURCES = adaboostgabor.M1.cpp
adaboostgabortraining_M1_LDADD = $(top_builddir)/src/libAdaGabor.a -lhighgui \
	-L/usr/local/lib -lcv -lml -lcxcore

SUBDIRS = ClientBasedFaceReg Gender IntraExtraFaceReg MultiClassification PCA \
	Segmentation

PairPoolPartition_LDADD = $(top_builddir)/src/libAdaGabor.a -L/usr/local/lib \
	-lhighgui -lcxcore -lcv

GaborTesting_SOURCES = GaborTest.cpp
GaborTesting_LDADD = $(top_builddir)/src/libAdaGabor.a -lml -L/usr/local/lib \
	-lcv -lhighgui -lcxcore

FindMutInf_SOURCES = findMutInf.cpp
FindMutInf_LDADD = $(top_builddir)/src/libAdaGabor.a -lhighgui -L/usr/local/lib \
	-lcxcore -lcv

trainFERET_SOURCES = ferettraining.cpp
trainFERET_LDADD = $(top_builddir)/src/libAdaGabor.a -lhighgui -lml \
	-L/usr/local/lib -lcxcore -lcv

testFERET_SOURCES = ferettesting.cpp
testFERET_LDADD = $(top_builddir)/src/libAdaGabor.a -lhighgui -L/usr/local/lib \
	-lml -lcxcore -lcv

all: all-recursive

.SUFFIXES:
.SUFFIXES: .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am  $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh \
		&& exit 0; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --gnu  src/Makefile'; \
	cd $(top_srcdir) && \
	  $(AUTOMAKE) --gnu  src/Makefile
.PRECIOUS: Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__depfiles_maybe);; \
	esac;

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
install-libLIBRARIES: $(lib_LIBRARIES)
	@$(NORMAL_INSTALL)
	test -z "$(libdir)" || $(MKDIR_P) "$(DESTDIR)$(libdir)"
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    f=$(am__strip_dir) \
	    echo " $(libLIBRARIES_INSTALL) '$$p' '$(DESTDIR)$(libdir)/$$f'"; \
	    $(libLIBRARIES_INSTALL) "$$p" "$(DESTDIR)$(libdir)/$$f"; \
	  else :; fi; \
	done
	@$(POST_INSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  if test -f $$p; then \
	    p=$(am__strip_dir) \
	    echo " $(RANLIB) '$(DESTDIR)$(libdir)/$$p'"; \
	    $(RANLIB) "$(DESTDIR)$(libdir)/$$p"; \
	  else :; fi; \
	done

uninstall-libLIBRARIES:
	@$(NORMAL_UNINSTALL)
	@list='$(lib_LIBRARIES)'; for p in $$list; do \
	  p=$(am__strip_dir) \
	  echo " rm -f '$(DESTDIR)$(libdir)/$$p'"; \
	  rm -f "$(DESTDIR)$(libdir)/$$p"; \
	done

clean-libLIBRARIES:
	-test -z "$(lib_LIBRARIES)" || rm -f $(lib_LIBRARIES)
libAdaGabor.a: $(libAdaGabor_a_OBJECTS) $(libAdaGabor_a_DEPENDENCIES) 
	-rm -f libAdaGabor.a
	$(libAdaGabor_a_AR) libAdaGabor.a $(libAdaGabor_a_OBJECTS) $(libAdaGabor_a_LIBADD)
	$(RANLIB) libAdaGabor.a
install-binPROGRAMS: $(bin_PROGRAMS)
	@$(NORMAL_INSTALL)
	test -z "$(bindir)" || $(MKDIR_P) "$(DESTDIR)$(bindir)"
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  p1=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  if test -f $$p \
	     || test -f $$p1 \
	  ; then \
	    f=`echo "$$p1" | sed 's,^.*/,,;$(transform);s/$$/$(EXEEXT)/'`; \
	   echo " $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) '$$p' '$(DESTDIR)$(bindir)/$$f'"; \
	   $(INSTALL_PROGRAM_ENV) $(LIBTOOL) $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=install $(binPROGRAMS_INSTALL) "$$p" "$(DESTDIR)$(bindir)/$$f" || exit 1; \
	  else :; fi; \
	done

uninstall-binPROGRAMS:
	@$(NORMAL_UNINSTALL)
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo "$$p" | sed 's,^.*/,,;s/$(EXEEXT)$$//;$(transform);s/$$/$(EXEEXT)/'`; \
	  echo " rm -f '$(DESTDIR)$(bindir)/$$f'"; \
	  rm -f "$(DESTDIR)$(bindir)/$$f"; \
	done

clean-binPROGRAMS:
	@list='$(bin_PROGRAMS)'; for p in $$list; do \
	  f=`echo $$p|sed 's/$(EXEEXT)$$//'`; \
	  echo " rm -f $$p $$f"; \
	  rm -f $$p $$f ; \
	done
FindMutInf$(EXEEXT): $(FindMutInf_OBJECTS) $(FindMutInf_DEPENDENCIES) 
	@rm -f FindMutInf$(EXEEXT)
	$(CXXLINK) $(FindMutInf_OBJECTS) $(FindMutInf_LDADD) $(LIBS)
GaborProcess$(EXEEXT): $(GaborProcess_OBJECTS) $(GaborProcess_DEPENDENCIES) 
	@rm -f GaborProcess$(EXEEXT)
	$(CXXLINK) $(GaborProcess_OBJECTS) $(GaborProcess_LDADD) $(LIBS)
GaborTesting$(EXEEXT): $(GaborTesting_OBJECTS) $(GaborTesting_DEPENDENCIES) 
	@rm -f GaborTesting$(EXEEXT)
	$(CXXLINK) $(GaborTesting_OBJECTS) $(GaborTesting_LDADD) $(LIBS)
MutInf$(EXEEXT): $(MutInf_OBJECTS) $(MutInf_DEPENDENCIES) 
	@rm -f MutInf$(EXEEXT)
	$(CXXLINK) $(MutInf_OBJECTS) $(MutInf_LDADD) $(LIBS)
PairPoolPartition$(EXEEXT): $(PairPoolPartition_OBJECTS) $(PairPoolPartition_DEPENDENCIES) 
	@rm -f PairPoolPartition$(EXEEXT)
	$(CXXLINK) $(PairPoolPartition_OBJECTS) $(PairPoolPartition_LDADD) $(LIBS)
adaboostgabortesting$(EXEEXT): $(adaboostgabortesting_OBJECTS) $(adaboostgabortesting_DEPENDENCIES) 
	@rm -f adaboostgabortesting$(EXEEXT)
	$(CXXLINK) $(adaboostgabortesting_OBJECTS) $(adaboostgabortesting_LDADD) $(LIBS)
adaboostgabortraining$(EXEEXT): $(adaboostgabortraining_OBJECTS) $(adaboostgabortraining_DEPENDENCIES) 
	@rm -f adaboostgabortraining$(EXEEXT)
	$(adaboostgabortraining_LINK) $(adaboostgabortraining_OBJECTS) $(adaboostgabortraining_LDADD) $(LIBS)
adaboostgabortraining.M1$(EXEEXT): $(adaboostgabortraining_M1_OBJECTS) $(adaboostgabortraining_M1_DEPENDENCIES) 
	@rm -f adaboostgabortraining.M1$(EXEEXT)
	$(CXXLINK) $(adaboostgabortraining_M1_OBJECTS) $(adaboostgabortraining_M1_LDADD) $(LIBS)
prepare$(EXEEXT): $(prepare_OBJECTS) $(prepare_DEPENDENCIES) 
	@rm -f prepare$(EXEEXT)
	$(CXXLINK) $(prepare_OBJECTS) $(prepare_LDADD) $(LIBS)
sign2weaks$(EXEEXT): $(sign2weaks_OBJECTS) $(sign2weaks_DEPENDENCIES) 
	@rm -f sign2weaks$(EXEEXT)
	$(CXXLINK) $(sign2weaks_OBJECTS) $(sign2weaks_LDADD) $(LIBS)
testFERET$(EXEEXT): $(testFERET_OBJECTS) $(testFERET_DEPENDENCIES) 
	@rm -f testFERET$(EXEEXT)
	$(CXXLINK) $(testFERET_OBJECTS) $(testFERET_LDADD) $(LIBS)
trainFERET$(EXEEXT): $(trainFERET_OBJECTS) $(trainFERET_DEPENDENCIES) 
	@rm -f trainFERET$(EXEEXT)
	$(CXXLINK) $(trainFERET_OBJECTS) $(trainFERET_LDADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)

distclean-compile:
	-rm -f *.tab.c

include ./$(DEPDIR)/DataGen.Po
include ./$(DEPDIR)/GaborTest.Po
include ./$(DEPDIR)/MatUsage.Po
include ./$(DEPDIR)/MutInformation.Po
include ./$(DEPDIR)/PoolPartition.Po
include ./$(DEPDIR)/adaboostgabor.M1.Po
include ./$(DEPDIR)/adaboostgabortesting.Po
include ./$(DEPDIR)/adaboostgabortraining.Po
include ./$(DEPDIR)/cv2bins.Po
include ./$(DEPDIR)/cvadaboost.Po
include ./$(DEPDIR)/cvadaboostfeatureselection.Po
include ./$(DEPDIR)/cvbin.Po
include ./$(DEPDIR)/cvbinarytrainingdata.Po
include ./$(DEPDIR)/cvbindiffgabadafeatureselect.Po
include ./$(DEPDIR)/cvbingabadafeatureselect.Po
include ./$(DEPDIR)/cventropy.Po
include ./$(DEPDIR)/cvfaceclassifier.Po
include ./$(DEPDIR)/cvfacedb.Po
include ./$(DEPDIR)/cvfacesvmclassifier.Po
include ./$(DEPDIR)/cvferet.Po
include ./$(DEPDIR)/cvgabadafeatureselect.Po
include ./$(DEPDIR)/cvgabor.Po
include ./$(DEPDIR)/cvgabordifferencedatamaker.Po
include ./$(DEPDIR)/cvgaborfeature.Po
include ./$(DEPDIR)/cvgaborfeaturepair.Po
include ./$(DEPDIR)/cvgaborfeaturepairpool.Po
include ./$(DEPDIR)/cvgaborfeaturepairselect.Po
include ./$(DEPDIR)/cvgaborfeaturepool.Po
include ./$(DEPDIR)/cvgaborresponsedata.Po
include ./$(DEPDIR)/cvknnweaklearner.Po
include ./$(DEPDIR)/cvlookuptable.Po
include ./$(DEPDIR)/cvmultigabadafeatureselect.Po
include ./$(DEPDIR)/cvmultigabadafsm1.Po
include ./$(DEPDIR)/cvmultitrainingdata.Po
include ./$(DEPDIR)/cvmutinf.Po
include ./$(DEPDIR)/cvmweaklearner.Po
include ./$(DEPDIR)/cvpcafacereg.Po
include ./$(DEPDIR)/cvpoolparams.Po
include ./$(DEPDIR)/cvsubject.Po
include ./$(DEPDIR)/cvtestingdata.Po
include ./$(DEPDIR)/cvtrainingdata.Po
include ./$(DEPDIR)/cvweaklearner.Po
include ./$(DEPDIR)/cvxm2vts.Po
include ./$(DEPDIR)/ferettesting.Po
include ./$(DEPDIR)/ferettraining.Po
include ./$(DEPDIR)/findMutInf.Po
include ./$(DEPDIR)/makingfeaturedata.Po
include ./$(DEPDIR)/prepare.Po
include ./$(DEPDIR)/sign2weaks.Po

.cpp.o:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
	$(CXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ `$(CYGPATH_W) '$<'`
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Po
#	source='$<' object='$@' libtool=no \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $(DEPDIR)/$*.Tpo -c -o $@ $<
	mv -f $(DEPDIR)/$*.Tpo $(DEPDIR)/$*.Plo
#	source='$<' object='$@' libtool=yes \
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) \
#	$(LTCXXCOMPILE) -c -o $@ $<

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs

# This directory's subdirectories are mostly independent; you can cd
# into them and run `make' without going through this Makefile.
# To change the values of `make' variables: instead of editing Makefiles,
# (1) if the variable is set in `config.status', edit `config.status'
#     (which will cause the Makefiles to be regenerated when you run `make');
# (2) otherwise, pass the desired values on the `make' command line.
$(RECURSIVE_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	target=`echo $@ | sed s/-recursive//`; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    dot_seen=yes; \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done; \
	if test "$$dot_seen" = "no"; then \
	  $(MAKE) $(AM_MAKEFLAGS) "$$target-am" || exit 1; \
	fi; test -z "$$fail"

$(RECURSIVE_CLEAN_TARGETS):
	@failcom='exit 1'; \
	for f in x $$MAKEFLAGS; do \
	  case $$f in \
	    *=* | --[!k]*);; \
	    *k*) failcom='fail=yes';; \
	  esac; \
	done; \
	dot_seen=no; \
	case "$@" in \
	  distclean-* | maintainer-clean-*) list='$(DIST_SUBDIRS)' ;; \
	  *) list='$(SUBDIRS)' ;; \
	esac; \
	rev=''; for subdir in $$list; do \
	  if test "$$subdir" = "."; then :; else \
	    rev="$$subdir $$rev"; \
	  fi; \
	done; \
	rev="$$rev ."; \
	target=`echo $@ | sed s/-recursive//`; \
	for subdir in $$rev; do \
	  echo "Making $$target in $$subdir"; \
	  if test "$$subdir" = "."; then \
	    local_target="$$target-am"; \
	  else \
	    local_target="$$target"; \
	  fi; \
	  (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) $$local_target) \
	  || eval $$failcom; \
	done && test -z "$$fail"
tags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) tags); \
	done
ctags-recursive:
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  test "$$subdir" = . || (cd $$subdir && $(MAKE) $(AM_MAKEFLAGS) ctags); \
	done

ID: $(HEADERS) $(SOURCES) $(LISP) $(TAGS_FILES)
	list='$(SOURCES) $(HEADERS) $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonemtpy = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	mkid -fID $$unique
tags: TAGS

TAGS: tags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	here=`pwd`; \
	if ($(ETAGS) --etags-include --version) >/dev/null 2>&1; then \
	  include_option=--etags-include; \
	  empty_fix=.; \
	else \
	  include_option=--include; \
	  empty_fix=; \
	fi; \
	list='$(SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test ! -f $$subdir/TAGS || \
	      tags="$$tags $$include_option=$$here/$$subdir/TAGS"; \
	  fi; \
	done; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	if test -z "$(ETAGS_ARGS)$$tags$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	    $$tags $$unique; \
	fi
ctags: CTAGS
CTAGS: ctags-recursive $(HEADERS) $(SOURCES)  $(TAGS_DEPENDENCIES) \
		$(TAGS_FILES) $(LISP)
	tags=; \
	list='$(SOURCES) $(HEADERS)  $(LISP) $(TAGS_FILES)'; \
	unique=`for i in $$list; do \
	    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
	  done | \
	  $(AWK) '{ files[$$0] = 1; nonempty = 1; } \
	      END { if (nonempty) { for (i in files) print i; }; }'`; \
	test -z "$(CTAGS_ARGS)$$tags$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$tags $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && cd $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) $$here

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -pR $(srcdir)/$$file $(distdir)$$dir || exit 1; \
	    fi; \
	    cp -pR $$d/$$file $(distdir)$$dir || exit 1; \
	  else \
	    test -f $(distdir)/$$file \
	    || cp -p $$d/$$file $(distdir)/$$file \
	    || exit 1; \
	  fi; \
	done
	list='$(DIST_SUBDIRS)'; for subdir in $$list; do \
	  if test "$$subdir" = .; then :; else \
	    test -d "$(distdir)/$$subdir" \
	    || $(MKDIR_P) "$(distdir)/$$subdir" \
	    || exit 1; \
	    distdir=`$(am__cd) $(distdir) && pwd`; \
	    top_distdir=`$(am__cd) $(top_distdir) && pwd`; \
	    (cd $$subdir && \
	      $(MAKE) $(AM_MAKEFLAGS) \
	        top_distdir="$$top_distdir" \
	        distdir="$$distdir/$$subdir" \
		am__remove_distdir=: \
		am__skip_length_check=: \
	        distdir) \
	      || exit 1; \
	  fi; \
	done
check-am: all-am
check: check-recursive
all-am: Makefile $(LIBRARIES) $(PROGRAMS) $(HEADERS)
installdirs: installdirs-recursive
installdirs-am:
	for dir in "$(DESTDIR)$(libdir)" "$(DESTDIR)$(bindir)"; do \
	  test -z "$$dir" || $(MKDIR_P) "$$dir"; \
	done
install: install-recursive
install-exec: install-exec-recursive
install-data: install-data-recursive
uninstall: uninstall-recursive

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-recursive
install-strip:
	$(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	  install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	  `test -z '$(STRIP)' || \
	    echo "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'"` install
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
clean: clean-recursive

clean-am: clean-binPROGRAMS clean-generic clean-libLIBRARIES \
	clean-libtool mostlyclean-am

distclean: distclean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-recursive

dvi-am:

html: html-recursive

info: info-recursive

info-am:

install-data-am:

install-dvi: install-dvi-recursive

install-exec-am: install-binPROGRAMS install-libLIBRARIES

install-html: install-html-recursive

install-info: install-info-recursive

install-man:

install-pdf: install-pdf-recursive

install-ps: install-ps-recursive

installcheck-am:

maintainer-clean: maintainer-clean-recursive
	-rm -rf ./$(DEPDIR)
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-recursive

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-recursive

pdf-am:

ps: ps-recursive

ps-am:

uninstall-am: uninstall-binPROGRAMS uninstall-libLIBRARIES

.MAKE: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) install-am \
	install-strip

.PHONY: $(RECURSIVE_CLEAN_TARGETS) $(RECURSIVE_TARGETS) CTAGS GTAGS \
	all all-am check check-am clean clean-binPROGRAMS \
	clean-generic clean-libLIBRARIES clean-libtool ctags \
	ctags-recursive distclean distclean-compile distclean-generic \
	distclean-libtool distclean-tags distdir dvi dvi-am html \
	html-am info info-am install install-am install-binPROGRAMS \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-libLIBRARIES install-man \
	install-pdf install-pdf-am install-ps install-ps-am \
	install-strip installcheck installcheck-am installdirs \
	installdirs-am maintainer-clean maintainer-clean-generic \
	mostlyclean mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool pdf pdf-am ps ps-am tags tags-recursive \
	uninstall uninstall-am uninstall-binPROGRAMS \
	uninstall-libLIBRARIES

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
